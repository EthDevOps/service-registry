name: Build and Push Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper version detection

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version information
      id: version
      run: |
        # Get the short commit hash
        COMMIT_HASH=$(git rev-parse --short HEAD)
        echo "commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
        
        # Get build date
        BUILD_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT
        
        # Determine version based on event type
        if [[ $GITHUB_REF_TYPE == "tag" ]]; then
          # If this is a tag, use the tag as version (remove 'v' prefix if present)
          VERSION=${GITHUB_REF_NAME#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "is_release=true" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF_NAME == "main" ]]; then
          # If this is main branch, use latest
          echo "version=latest" >> $GITHUB_OUTPUT
          echo "is_release=false" >> $GITHUB_OUTPUT
        else
          # For other branches, use branch name and commit
          VERSION="${GITHUB_REF_NAME}-${COMMIT_HASH}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "is_release=false" >> $GITHUB_OUTPUT
        fi
        
        echo "Using version: $(cat $GITHUB_OUTPUT | grep version= | cut -d= -f2)"
        echo "Commit hash: $COMMIT_HASH"
        echo "Build date: $BUILD_DATE"

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          APP_VERSION=${{ steps.version.outputs.version }}
          APP_COMMIT_HASH=${{ steps.version.outputs.commit_hash }}
          APP_BUILD_DATE=${{ steps.version.outputs.build_date }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output image details
      run: |
        echo "## ðŸ“¦ Docker Image Built" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ steps.version.outputs.commit_hash }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date:** ${{ steps.version.outputs.build_date }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tags:** " >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" | sed 's/^/  - /' >> $GITHUB_STEP_SUMMARY